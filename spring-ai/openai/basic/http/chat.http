### Chat
GET http://localhost:8080/chat?message=대한민국의 수도는?

# 대한민국의 수도는 서울입니다.

### Chat Message
GET http://localhost:8080/chat-message?message=뉴턴의 운동 제2법칙을 간단하게 설명하세요

# 뉴턴의 운동 제2법칙은 물체의 가속도는 그 물체에 가해진 힘에 비례하고, 그 물체의 질량에 반비례한다는 법칙입니다. 이 법칙은 수식으로 \( F = ma \) 로 표현되며, 여기서 \( F \)는 힘, \( m \)은 질량, \( a \)는 가속도를 나타냅니다. 간단히 말해서, 물체에 더 큰 힘을 가할수록 더 빨리 가속하고, 물체가 무거울수록 같은 힘으로는 덜 가속된다는 뜻입니다.

### Chat with placeholder
GET http://localhost:8080/chat/placeholder?subject=자바&tone=friendly&message=자바 Collection에 대해 설명해줘

# 물론이죠! 자바의 Collection 프레임워크는 데이터를 저장하고 조작하는 데 사용되는 구조와 클래스를 제공하는 중요한 부분입니다. 이 프레임워크는 다양한 형태의 데이터 구조를 제공하여 개발자가 데이터를 효율적으로 관리할 수 있도록 도와줍니다. 다음은 자바 Collection 프레임워크의 주요 인터페이스와 클래스에 대한 설명입니다:
#
# 1. **Collection 인터페이스**:
#    - Collection 인터페이스는 Java Collections Framework의 최상위 인터페이스로, 여러 요소를 그룹화하는 데 사용됩니다.
#    - 이 인터페이스는 하위 인터페이스와 클래스를 통해 다양한 형태로 구현됩니다.
#
# 2. **List 인터페이스**:
#    - 순서가 있는 컬렉션을 나타냅니다. 요소가 추가되는 순서를 기억하며, 인덱스를 통해 요소에 접근할 수 있습니다.
#    - 구현 클래스: `ArrayList`, `LinkedList`, `Vector`, `Stack` 등이 있습니다.
#    - 예를 들어, `ArrayList`는 배열 기반으로 요소를 저장하며, 임의 접근이 빠르지만 삽입과 삭제가 비교적 느립니다.
#
# 3. **Set 인터페이스**:
#    - 순서를 유지하지 않고, 중복을 허용하지 않는 컬렉션입니다.
#    - 구현 클래스: `HashSet`, `LinkedHashSet`, `TreeSet` 등이 있습니다.
#    - `HashSet`은 해시 테이블을 사용하여 요소를 저장하며, 요소의 순서를 보장하지 않습니다. `TreeSet`은 요소를 정렬된 순서로 유지합니다.
#
# 4. **Queue 인터페이스**:
#    - 요소를 처리하기 위한 대기열을 나타냅니다. 일반적으로 FIFO(First-In-First-Out) 방식으로 동작합니다.
#    - 구현 클래스: `LinkedList`, `PriorityQueue` 등이 있습니다.
#    - `PriorityQueue`는 요소의 자연 순서나 사용자 정의 순서에 따라 우선순위를 지정하여 처리합니다.
#
# 5. **Map 인터페이스**:
#    - 키-값 쌍을 저장하는 컬렉션입니다. 키는 중복을 허용하지 않지만, 값은 중복될 수 있습니다.
#    - 구현 클래스: `HashMap`, `LinkedHashMap`, `TreeMap`, `Hashtable` 등이 있습니다.
#    - `HashMap`은 해시 테이블을 사용하여 키-값 쌍을 저장합니다. `TreeMap`은 키의 자연 순서나 사용자 정의 순서에 따라 정렬된 맵을 제공합니다.
#
# 자바의 Collection 프레임워크는 이러한 구조 외에도 다양한 유틸리티 메서드를 제공하여, 컬렉션을 쉽게 조작할 수 있도록 돕습니다. 예를 들어, `Collections` 클래스에는 정렬, 검색, 채우기 등의 메서드가 포함되어 있습니다.
#
# 이 프레임워크를 사용하면 데이터 구조를 직접 구현하지 않고도 효율적인 데이터 관리와 조작을 수행할 수 있어, 개발 시간을 절약하고 코드의 가독성을 높일 수 있습니다. 추가적으로, 자바 8부터는 스트림(Stream) API를 통해 컬렉션을 더욱 직관적이고 선언적으로 다룰 수 있게 되었습니다.

### chat response(json)
GET http://localhost:8080/chat-json?message=미국의 수도는?

#{
#  "result": {
#    "output": {
#      "messageType": "ASSISTANT",
#      "metadata": {
#        "refusal": "",
#        "finishReason": "STOP",
#        "index": 0,
#        "id": "chatcmpl-Asrw2thdhPGs2v949H6SB2enZCrEZ",
#        "role": "ASSISTANT",
#        "messageType": "ASSISTANT"
#      },
#      "toolCalls": [],
#      "content": "미국의 수도는 워싱턴 D.C.입니다."
#    },
#    "metadata": {
#      "finishReason": "STOP",
#      "contentFilterMetadata": null
#    }
#  },
#  "results": [
#    {
#      "output": {
#        "messageType": "ASSISTANT",
#        "metadata": {
#          "refusal": "",
#          "finishReason": "STOP",
#          "index": 0,
#          "id": "chatcmpl-Asrw2thdhPGs2v949H6SB2enZCrEZ",
#          "role": "ASSISTANT",
#          "messageType": "ASSISTANT"
#        },
#        "toolCalls": [],
#        "content": "미국의 수도는 워싱턴 D.C.입니다."
#      },
#      "metadata": {
#        "finishReason": "STOP",
#        "contentFilterMetadata": null
#      }
#    }
#  ],
#  "metadata": {
#    "id": "chatcmpl-Asrw2thdhPGs2v949H6SB2enZCrEZ",
#    "model": "gpt-4o-2024-08-06",
#    "rateLimit": {
#      "requestsLimit": 500,
#      "requestsRemaining": 499,
#      "requestsReset": "PT0.12S",
#      "tokensLimit": 30000,
#      "tokensRemaining": 29978,
#      "tokensReset": "PT0.044S"
#    },
#    "usage": {
#      "audioTokens": 0,
#      "totalTokens": 27,
#      "promptTokensDetails": {
#        "audioTokens": 0,
#        "cachedTokens": 0
#      },
#      "reasoningTokens": 0,
#      "promptTokens": 13,
#      "generationTokens": 14,
#      "acceptedPredictionTokens": 0,
#      "rejectedPredictionTokens": 0,
#      "completionTokenDetails": {
#        "reasoningTokens": 0,
#        "acceptedPredictionTokens": 0,
#        "audioTokens": 0,
#        "rejectedPredictionTokens": 0
#      },
#      "promptTokensDetailsCachedTokens": 0
#    },
#    "promptMetadata": [],
#    "empty": false
#  }
#}

### chat response(object)
GET http://localhost:8080/chat-object?message=햄 볶음밥의 재료를 알려줘

#{
#  "answer": "햄, 밥, 양파, 당근, 파, 계란, 간장, 식용유, 소금, 후추"
#}

### recipe
GET http://localhost:8080/recipe?foodName=햄버거&question=주요 재료는?

#{
#  "answer": "햄버거의 주요 재료는 빵, 패티, 양상추, 토마토, 치즈, 양파, 피클, 그리고 소스입니다."
#}

### chat list
GET http://localhost:8080/chat-list?message=미국의 주요 도시 5개를 알려줘

#[
#  "New York",
#  "Los Angeles",
#  "Chicago",
#  "Houston",
#  "Phoenix"
#]

### chat map
GET http://localhost:8080/chat-map?message=한국 영화제목을 키, 그 영화의 감독 이름을 value로 5개 만들어줘

#{
#  "기생충": "봉준호",
#  "올드보이": "박찬욱",
#  "버닝": "이창동",
#  "괴물": "봉준호",
#  "아가씨": "박찬욱"
#}

### chat movie
GET http://localhost:8080/chat/movie?directorName=봉준호

#[
#  {
#    "title": "플란다스의 개",
#    "year": "2000"
#  },
#  {
#    "title": "살인의 추억",
#    "year": "2003"
#  },
#  {
#    "title": "괴물",
#    "year": "2006"
#  },
#  {
#    "title": "마더",
#    "year": "2009"
#  },
#  {
#    "title": "설국열차",
#    "year": "2013"
#  },
#  {
#    "title": "옥자",
#    "year": "2017"
#  },
#  {
#    "title": "기생충",
#    "year": "2019"
#  }
#]